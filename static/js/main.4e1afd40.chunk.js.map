{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post -and-form/index.js","components/post -and-form/post-and-form.js","components/toggle/index.js","components/toggle/togle.js","components/reset/index.js","components/reset/reset.js","components/scroll/index.js","components/scroll/scroll.js","components/app/app.js","index.js"],"names":["Header","styled","div","AppHead","val","liked","allPosts","useState","localStorage","getItem","name","setName","d","className","z","t","Date","getHours","greeting","onSubmit","e","preventDefault","setItem","type","placeholder","onChange","target","value","SearchPanel","props","state","term","onUpdateSearch","bind","this","setState","React","Component","PostStatusFilter","buttons","label","map","filter","onFilterSelect","clazz","key","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","important","like","date","classNames","m","y","h","mi","button","PostList","post","elements","item","Object","id","itemProps","PostAddForm","text","onValueChange","onAdd","Toggle","on","setOn","document","body","classList","toggle","src","Reset","clear","window","location","reload","Scroll","setH","addEventListener","documentElement","scrollTop","scrollTo","AppBlock","memy","JSON","parse","data","genId","setDate","deleteItem","addItem","base","maxId","prevState","memory","stringify","position","result","words","max_position","length","i","Math","floor","random","substring","addZero","getDate","getMonth","getFullYear","getMinutes","num","index","findIndex","elem","before","slice","after","cont","forEach","newItem","old","isFinite","ter","split","console","log","indexOf","items","visiblePosts","filterPost","searchPost","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4e1afd40.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useState} from 'react';\r\n\r\nconst Header = styled.div`\r\ndisplay:flex;\r\nalign-items:flex-end;\r\njustify-content:space-between;\r\nh1{\r\n    font-size:26px;\r\n    :hover{\r\n        color:blue;\r\n    }\r\n}\r\nh2{\r\n    font-size:1.2rem;\r\n    color:grey;\r\n}\r\n`\r\n\r\nconst AppHead = ({liked,allPosts}) =>{\r\n\r\n    const [name,setName]=useState(localStorage.getItem('name'));\r\n    \r\n    let val\r\n    const onVal=(e)=>{\r\n        val=e.target.value;\r\n    }\r\n    const onSub=(e)=>{\r\n        e.preventDefault();\r\n        setName(val);\r\n        localStorage.setItem('name',val);\r\n    }\r\n    let d = name;\r\n\r\nconst greeting = () =>{\r\n    let t = new Date().getHours()\r\n    let z;\r\n\r\n   if(t>=5&&t<11){\r\n    z='Доброе утро'\r\n   }else if(t>=11&&t<16){\r\n    z='Добрый день'\r\n   }else if(t>=16&&t<22){\r\n    z='Добрый вечер'\r\n   }else if(t>=22){\r\n    z='Доброй ночи'\r\n   }\r\n   return z;\r\n}\r\n    \r\n\r\n    return(\r\n       \r\n        <Header>\r\n            {d? <><h1>{d}</h1><div className=\"greeting\">{greeting()}</div></> : <form className=\"bottom-panel d-flex\" onSubmit={onSub}>\r\n                <input type=\"text\" placeholder=\"Введите ваше имя\"\r\n                className=\"form-control new-post-label\" onChange={onVal}\r\n                value={val}></input>\r\n                <button \r\n                type=\"submit\"\r\n                className=\"btn btn-outline-secondary\"\r\n                >\r\n                    Назначить Имя</button>\r\n            </form>}\r\n              \r\n    <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHead;","import AppHead from './app-header';\r\nexport default AppHead;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nexport default class SearchPanel extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={term:''}\r\n        this.onUpdateSearch=this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <input\r\n            className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по записям\"\r\n            onChange={this.onUpdateSearch}>\r\n\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React from 'react';\r\n\r\n\r\nexport default class PostStatusFilter extends React.Component{\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.buttons = [\r\n\t\t\t{name: 'all', label: 'Все'},\r\n\t\t\t{name: 'like', label: 'Понравилось'},\r\n\t\t\t{name: 'date', label: 'По дате'}\r\n        ];\r\n     }\r\n    render() {\r\n\r\n\t\tconst buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n\t\t\tconst active = filter === name;\r\n\t\t\tconst clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n\t\t\treturn (\r\n\t\t\t\t<button type='button'\r\n\t\t\t\t \tclassName={`btn ${clazz}`}\r\n\t\t\t\t\tkey={name}\r\n\t\t\t\t\tonClick={() => onFilterSelect(name)}>\r\n\t\t\t\t\t{label}</button>\r\n\t\t\t)\r\n\t\t});\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n ","import PostListItem from './post-list-item';\r\nexport default PostListItem;\r\n","import React from 'react';\r\n\r\n\r\nexport default class PostListItem extends React.Component{\r\n \r\n   \r\n   render(){\r\n       const {label,onDelete, onToggleImportant,onToggleLiked,important,like,date} = this.props;\r\n       \r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n    if(like){\r\nclassNames+=' like';\r\n    }\r\n\r\n    if(important){\r\n        classNames +=' important';\r\n    }\r\n       return(\r\n    <>\r\n        <div className=\" dat1 date\">{`${date.d}.${date.m}.${date.y}`}</div>\r\n        <div className=\" dat2 date\">{`${date.h} : ${date.mi}`}</div>\r\n        <div className={classNames}>\r\n            <span className=\"app-list-item-label\" onClick={onToggleLiked}>\r\n                {label}\r\n            </span>\r\n            <div className=\"d-flex justify-content-center alighn-item-center\">\r\n                <button type=\"button\" className=\"btn-star btn-sm\" onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-star\"></i>\r\n                </button>\r\n                <button button=\"button\"  className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n                <i className=\"fa fa-heart\"></i>\r\n            </div>\r\n        </div>\r\n    </>\r\n       )\r\n   }\r\n}\r\n\r\n\r\n\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\n\r\nconst PostList = ({post, onDelete, onToggleImportant, onToggleLiked}) =>{\r\n    const elements = post.map((item)=>{\r\n        if(item instanceof Object){\r\n            const {id,...itemProps} = item;\r\n        return(\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem  {...itemProps} onDelete={()=> onDelete(id)}\r\n                onToggleImportant={() =>onToggleImportant(id)}\r\n                onToggleLiked={() =>onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n        }\r\n    });\r\n    return (\r\n            <ul className=\"app-list list-group\">\r\n            {elements}\r\n            </ul>\r\n    )\r\n}\r\nexport default PostList;","import PostAddForm from './post-and-form';\r\nexport default PostAddForm;","import React from 'react';\r\n\r\nexport default class PostAddForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={text:''};\r\n        this.onValueChange=this.onValueChange.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n    onValueChange(e){\r\n        this.setState({text:e.target.value})\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({text:''});\r\n    }\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n                <input type=\"text\" placeholder=\"О чем вы думаете сейчас\"\r\n                className=\"form-control new-post-label\" onChange={this.onValueChange}\r\n                value={this.state.text}></input>\r\n                <button \r\n                type=\"submit\"\r\n                className=\"btn btn-outline-secondary\"\r\n                >\r\n                    Добавить</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import Toggle from './togle';\r\nexport default Toggle;","import React from 'react';\r\nimport {useState} from 'react';\r\nconst Toggle =()=>{\r\n    const[on,setOn]=useState('toggleDivBlack')\r\n   \r\n    const click=()=>{\r\n        document.body.classList.toggle('dark');\r\n        setOn( on ==='toggleDivBlack' ? 'toggleDivWhite':'toggleDivBlack')\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <button className=\"toggleDivBlack\" onClick={click}><img src=\"https://static.thenounproject.com/png/607586-200.png\"></img></button><span className=\"toggle\">{on==='toggleDivBlack'? 'Ночная тема':'Дневная тема'}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Toggle;","import Reset from './reset';\r\nexport default Reset;","import React from 'react';\r\n\r\nconst Reset = () =>{\r\n    const resetMemory =() =>{\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    }\r\n\r\n    return(\r\n        <><button onClick={resetMemory} className=\"reset\"><img src=\"https://flortaboada.com/wp-content/uploads/2000px-View-refresh_Gion_simple.svg_-1200x1171.png\"></img></button>\r\n        <span className=\"reset-name\">Reset</span>\r\n        </>\r\n    )\r\n}\r\nexport default Reset;","import Scroll from './scroll';\r\nexport default Scroll;","import React, { useEffect } from 'react';\r\nimport {useState} from 'react';\r\n\r\nconst Scroll = () =>{\r\n    const [h,setH]=useState();\r\n\r\n    window.addEventListener('scroll',()=>{\r\n        if(document.documentElement.scrollTop>500){\r\n            setH(document.documentElement.scrollTop)\r\n        }else{\r\n            setH(0)\r\n        }\r\n    });\r\n\r\n    const clickOnTop = () =>{\r\n        document.documentElement.scrollTo(0,0);\r\n    }\r\n    return(\r\n        h>=500?<div onClick={clickOnTop} className=\"scroll\"><img src=\"https://icons.iconseeker.com/png/fullsize/fresh-addon/arrow-up-2.png\"></img></div>:null\r\n        \r\n    )\r\n}\r\nexport default Scroll;","import React from 'react';\r\n\r\nimport AppHead from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from'../post -and-form';\r\nimport Toggle from '../toggle';\r\nimport Reset from '../reset';\r\nimport Scroll from '../scroll';\r\n\r\n\r\n\r\nimport './app.css';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst AppBlock = styled.div`\r\nmargin: 0 auto;\r\nmax-width: 800px;\r\n`\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.memy=JSON.parse(localStorage.getItem('app'));\r\n        this.state={data:this.memy? this.memy:[\r\n            {label:'Привествую незнакомец',important:false,id:this.genId(),date:this.setDate()},\r\n            {label:'Давай знакомиться, введи своё имя в первое поле, так я буду знать твоё имя',important:false,id:this.genId(),date:this.setDate()},\r\n        ],\r\n        term:'',\r\n        filter:'all'\r\n    };\r\n        \r\n        this.deleteItem=this.deleteItem.bind(this);\r\n        this.addItem=this.addItem.bind(this);\r\n        this.onToggleImportant=this.onToggleImportant.bind(this);\r\n        this.onToggleLiked=this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch=this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect=this.onFilterSelect.bind(this);\r\n        this.base=this.base.bind(this);\r\n        this.maxId = localStorage.getItem('id')? localStorage.getItem('id'):4;\r\n    }\r\n\r\n    componentDidUpdate(prevState){\r\n        if(this.state!==prevState){\r\n            this.memory()\r\n        }\r\n    }\r\n\r\n    memory(){\r\n        localStorage.setItem('app',JSON.stringify(this.state.data))\r\n    }\r\n    genId(){\r\n        let result = '';\r\n        let words = '0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM';\r\n        let max_position = words.length - 1;\r\n        let position\r\n            for(let i = 0; i < 5; ++i ) {\r\n                position = Math.floor ( Math.random() * max_position );\r\n                result += words.substring(position, position + 1);\r\n            }\r\n        \r\n            return result;     \r\n    }\r\n    setDate(){\r\n        let date = new Date();\r\n        return{\r\n            d:this.addZero(date.getDate()),\r\n            m:this.addZero(date.getMonth()+1),\r\n            y:date.getFullYear(),\r\n            h:this.addZero(date.getHours()),\r\n            mi:this.addZero(date.getMinutes())\r\n        };\r\n    }\r\n    addZero(num){\r\n        if(num<10){\r\n            return '0'+num;\r\n        }\r\n        return num;\r\n    }\r\n    deleteItem(id){\r\n        this.setState(({data})=>{\r\n            const index = data.findIndex(elem => elem.id === id)\r\n\r\n            const before = data.slice(0,index);\r\n            const after = data.slice(index +1);\r\n            const newArr = [...before,...after];\r\n            return {\r\n                data:newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body){\r\n        let cont=true;\r\n        this.state.data.forEach(({label})=>{\r\n            if(label===body||body===''){\r\n                cont= false\r\n            }\r\n        });\r\n        if(!cont){return}\r\n        const newItem = {\r\n            label:body,\r\n            important:false,\r\n            id:this.genId(),\r\n            date:this.setDate()\r\n        }\r\n        this.setState(({data})=>{\r\n            const newArray = [...data, newItem];\r\n            return{\r\n                data:newArray\r\n            }\r\n        });\r\n    }\r\n\r\nbase(important,id){\r\n        this.setState(({data})=>{\r\n            const index = data.findIndex(elem=> elem.id ===id);\r\n\r\n            const old =data[index];\r\n            const newItem = {...old,[important]:!old[important]};\r\n\r\n            const newArray = [...data.slice(0,index),newItem,...data.slice(index+1)];\r\n            return{\r\n                data: newArray\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id){\r\n        this.base('important',id);\r\n    }\r\n\r\n    onToggleLiked(id){\r\n        this.base('like',id);\r\n    }\r\n\r\n    searchPost(item,term){\r\n        if(term.length===0){\r\n            return item\r\n        }\r\n        if(isFinite(term)){\r\n            let ter=term.split('.')\r\n            return item.filter((item)=>{\r\n                if(item.date.d==ter[0]&&item.date.m==ter[1]){\r\n                    return item\r\n                }\r\n            });\r\n        }\r\n        return item.filter((item)=>{\r\n            console.log(item)\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n   onUpdateSearch(term){\r\n    this.setState({term});\r\n   }\r\n\r\n   filterPost(items,filter){\r\n       if(filter=='like'){\r\n           return items.filter(item => item.like)\r\n       }else if(filter=='date'){\r\n            return items.filter(item => item.date.d)\r\n       }else{\r\n           return items\r\n       }\r\n   }\r\n   onFilterSelect(filter){\r\n       this.setState({filter});\r\n   }\r\n \r\n   render(){\r\n        const {data,term,filter} = this.state;\r\n        const liked = this.state.data.filter(item=>item.like).length;\r\n        const  allPosts = this.state.data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data,term), filter);\r\n        \r\n    return (\r\n        <AppBlock>\r\n            <Scroll/>\r\n            <div className=\"d-flex\">\r\n            <Toggle/>\r\n            <Reset/>\r\n            </div>\r\n                <AppHead liked={liked}\r\n                allPosts={allPosts}/>\r\n            <div className=\"search-panel d-flex\">\r\n                <SearchPanel onUpdateSearch={this.onUpdateSearch}/>\r\n                <PostStatusFilter filter={filter} onFilterSelect ={this.onFilterSelect}/>\r\n            </div>\r\n                <PostList \r\n                post ={visiblePosts} \r\n                onDelete={this.deleteItem}\r\n                onToggleImportant = {this.onToggleImportant}\r\n                onToggleLiked={this.onToggleLiked} />\r\n                <PostAddForm onAdd={this.addItem} label={this.state.data}/>\r\n        </AppBlock>\r\n        )\r\n   }\r\n \r\n}\r\n\r\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/app/app';\n\n\n\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n"],"sourceRoot":""}